const {
    ApplicationCommandOptionType,
    ActionRowBuilder,
    TextInputBuilder,
    TextInputStyle,
    ModalBuilder
} = require("discord.js");
const { PrismaClient } = require("@prisma/client");

const prisma = new PrismaClient();

module.exports = {
    data: {
        name: "verify",
        description: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏® IT22",
        options: [
            {
                type: ApplicationCommandOptionType.String,
                name: "applicant_number",
                description: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
                required: true,
            },
        ],
    },
    async run(interaction) {
        const applicant_number = interaction.options.getString(
            "applicant_number",
            true
        );

        const student = await prisma.student.findUnique({
            where: {
                id: applicant_number,
            },
        });

        if (!student) {
            return interaction.reply({
                content: "üò≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
                ephemeral: true,
            });
        }

        if (student.discordId) {
            return interaction.reply({
                content:
                    "ü•∂ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß, ‡∏´‡∏≤‡∏Å‡∏ô‡∏±‡πà‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏∏‡∏ì ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•",
                ephemeral: true,
            });
        }

        const studentByDiscordId = await prisma.student.findUnique({
            where: {
                discordId: interaction.user.id
            }
        });

        if (studentByDiscordId) {
            return interaction.reply({
                content:
                    `ü•∂ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Discord ‡∏ô‡∏µ‡πâ ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (${studentByDiscordId.nickname})`,
                ephemeral: true,
            });
        }

        const modalCustomId = `${interaction.user.id}-${Date.now()}`;
        const modal = new ModalBuilder({
            customId: modalCustomId,
            title: "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å ‚ú®",
            components: [
                new ActionRowBuilder({
                    components: [
                        new TextInputBuilder({
                            customId: "nickname",
                            label: "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
                            style: TextInputStyle.Short,
                            placeholder:
                                "‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞",
                            required: true,
                        }),
                    ],
                }),
                new ActionRowBuilder({
                    components: [
                        new TextInputBuilder({
                            customId: "note",
                            label: "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß",
                            style: TextInputStyle.Paragraph,
                            placeholder:
                                "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à/‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô/‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà",
                            required: false,
                        }),
                    ],
                }),
            ],
        });

        await interaction.showModal(modal);

        const modalInteraction = await interaction
            .awaitModalSubmit({
                time: 300_000,
                filter: (i) => i.customId === modalCustomId,
            })
            .then((res) => res)
            .catch(() => null);

        if (!modalInteraction) {
            await interaction.editReply({
                content: `üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: (!modalInteraction) ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•`,
                ephemeral: true,
            });
        }

        const role = await interaction.guild.roles.fetch(process.env.ROLE_ID);
        if (!role) {
            await interaction.editReply({
                content: `üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: (!role) ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•`,
                ephemeral: true,
            });
        }

        await interaction.member.roles.add(role);

        const nickname = modalInteraction.fields.getTextInputValue("nickname");
        const note = modalInteraction.fields.getTextInputValue("note");

        await prisma.student.update({
            where: {
                id: student.id,
            },
            data: {
                discordId: interaction.user.id,
                nickname,
                note: note.length ? note : null,
                verifiedAt: new Date(),
            },
        });

        // await interaction.member.setNickname(`IT22 | ${nickname}`, "Set new nickname");

        modalInteraction.reply({
            content:
                "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• `(Discord ID, ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô, ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß)` ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!",
            ephemeral: true,
        });
    },
};
