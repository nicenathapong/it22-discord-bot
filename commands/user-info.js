const { ApplicationCommandOptionType } = require("discord.js");
const { PrismaClient } = require("@prisma/client");
const { EmbedBuilder } = require("discord.js");

const prisma = new PrismaClient();

module.exports = {
    data: {
        name: "user-info",
        description:
            "‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡πÑ‡∏ß‡πâ",
        options: [
            {
                type: ApplicationCommandOptionType.User,
                name: "user",
                description: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                required: true,
            },
        ],
    },
    async run(interaction) {
        const user = interaction.options.getUser("user", true);

        const student = await prisma.student.findUnique({
            where: { discordId: user.id },
        });

        if (!student || !student.nickname || !student.verifiedAt) {
            return interaction.reply({
                content: "üò≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ",
            });
        }

        interaction.reply({
            embeds: [
                new EmbedBuilder({
                    author: {
                        name: user.username,
                        iconURL: user.avatarURL(),
                    },
                    title: `‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô: ${student.nickname}`,
                    ...(student.note
                        ? {
                              description: student.note,
                          }
                        : {}),
                        fields: [
                            {
                                name: "‡∏™‡∏≤‡∏Ç‡∏≤",
                                value: student.program,
                                inline: true
                            },
                            {
                                name: "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£",
                                value: student.project,
                                inline: true
                            }
                        ],
                    footer: {
                        text: `‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ ${student.verifiedAt.toLocaleString()}`,
                    },
                    color: 0x2757A1,
                }),
            ],
        });
    },
};
